{
    "name": "terrys-todos",
    "displayName": "Terry's Todos",
    "description": "An easy way to keep track of your todos",
    "version": "4.0.1",
    "icon": "resources/terrys-todos.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/MaruTerry/terrys-todos"
    },
    "pricing": "Free",
    "license": "SEE LICENSE IN LICENSE.txt",
    "publisher": "terrys-tools",
    "author": {
        "name": "MaruTerry"
    },
    "engines": {
        "vscode": "^1.84.0"
    },
    "keywords": [
        "todo",
        "todolist",
        "task",
        "tasklist",
        "commit message"
    ],
    "categories": [
        "Other",
        "SCM Providers"
    ],
    "activationEvents": [],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "terrys-todos.createTodo",
                "title": "Create Todo",
                "icon": {
                    "light": "resources/light/add.svg",
                    "dark": "resources/dark/add.svg"
                }
            },
            {
                "command": "terrys-todos.createTodoInFolder",
                "title": "Create Todo"
            },
            {
                "command": "terrys-todos.refreshTodos",
                "title": "Refresh"
            },
            {
                "command": "terrys-todos.setTodoDone",
                "title": "Mark as Done",
                "icon": {
                    "light": "resources/light/check.svg",
                    "dark": "resources/dark/check.svg"
                }
            },
            {
                "command": "terrys-todos.setFolderDone",
                "title": "Mark All as Done",
                "icon": {
                    "light": "resources/light/check-all.svg",
                    "dark": "resources/dark/check-all.svg"
                }
            },
            {
                "command": "terrys-todos.setTodoNotDone",
                "title": "Mark as not Done",
                "icon": {
                    "light": "resources/light/redo.svg",
                    "dark": "resources/dark/redo.svg"
                }
            },
            {
                "command": "terrys-todos.editTodo",
                "title": "Edit"
            },
            {
                "command": "terrys-todos.editDoneTodo",
                "title": "Edit"
            },
            {
                "command": "terrys-todos.deleteTodo",
                "title": "Delete"
            },
            {
                "command": "terrys-todos.deleteAllNotDoneTodos",
                "title": "Delete All"
            },
            {
                "command": "terrys-todos.deleteAllDoneTodos",
                "title": "Delete All"
            },
            {
                "command": "terrys-todos.toggleDates",
                "title": "Toggle Dates"
            },
            {
                "command": "terrys-todos.setSortingModeDate",
                "title": "Sort by Date"
            },
            {
                "command": "terrys-todos.setSortingModeColor",
                "title": "Sort by Color"
            },
            {
                "command": "terrys-todos.createBaseFolder",
                "title": "Create Folder",
                "icon": {
                    "light": "resources/light/new-folder.svg",
                    "dark": "resources/dark/new-folder.svg"
                }
            },
            {
                "command": "terrys-todos.createFolder",
                "title": "Create Folder"
            },
            {
                "command": "terrys-todos.editFolderLabel",
                "title": "Edit"
            },
            {
                "command": "terrys-todos.deleteFolder",
                "title": "Delete"
            },
            {
                "command": "terrys-todos.setTodoBlue",
                "title": "Blue"
            },
            {
                "command": "terrys-todos.setTodoYellow",
                "title": "Yellow"
            },
            {
                "command": "terrys-todos.setTodoRed",
                "title": "Red"
            },
            {
                "command": "terrys-todos.setTodoGreen",
                "title": "Green"
            },
            {
                "command": "terrys-todos.generateCommitMessage",
                "title": "Generate Commit Message (Terry's Todos)",
                "icon": {
                    "light": "resources/light/lightbulb.svg",
                    "dark": "resources/dark/lightbulb.svg"
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "terrys-todos",
                    "title": "Terry's Todos",
                    "icon": "resources/terrys-todos.svg"
                }
            ]
        },
        "views": {
            "terrys-todos": [
                {
                    "id": "todos-tree",
                    "name": "Todos",
                    "type": "tree"
                },
                {
                    "id": "done-todos-tree",
                    "name": "Done Todos",
                    "type": "tree"
                }
            ]
        },
        "menus": {
            "scm/title": [
                {
                    "command": "terrys-todos.generateCommitMessage",
                    "when": "scmProvider == git",
                    "group": "navigation"
                }
            ],
            "view/title": [
                {
                    "command": "terrys-todos.createTodo",
                    "when": "view == todos-tree",
                    "group": "navigation"
                },
                {
                    "command": "terrys-todos.refreshTodos",
                    "when": "view == todos-tree || view == done-todos-tree",
                    "group": "1"
                },
                {
                    "command": "terrys-todos.deleteAllNotDoneTodos",
                    "when": "view == todos-tree",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.deleteAllDoneTodos",
                    "when": "view == done-todos-tree",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.toggleDates",
                    "when": "view == todos-tree || view == done-todos-tree",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.setSortingModeDate",
                    "when": "view == todos-tree",
                    "group": "4"
                },
                {
                    "command": "terrys-todos.setSortingModeColor",
                    "when": "view == todos-tree",
                    "group": "4"
                },
                {
                    "command": "terrys-todos.createBaseFolder",
                    "when": "view == todos-tree",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "terrys-todos.setTodoDone",
                    "when": "view == todos-tree && viewItem === todo",
                    "group": "inline"
                },
                {
                    "command": "terrys-todos.setTodoNotDone",
                    "when": "view == done-todos-tree && viewItem === doneTodo",
                    "group": "inline"
                },
                {
                    "command": "terrys-todos.editTodo",
                    "when": "(view == todos-tree && viewItem === todo)",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.editDoneTodo",
                    "when": "(view == done-todos-tree && viewItem === doneTodo)",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.deleteTodo",
                    "when": "(view == todos-tree && viewItem === todo) || (view == done-todos-tree && viewItem === doneTodo)",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.setTodoBlue",
                    "when": "(view == todos-tree && viewItem === todo) || (view == done-todos-tree && viewItem === doneTodo)",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.setTodoYellow",
                    "when": "(view == todos-tree && viewItem === todo) || (view == done-todos-tree && viewItem === doneTodo)",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.setTodoRed",
                    "when": "(view == todos-tree && viewItem === todo) || (view == done-todos-tree && viewItem === doneTodo)",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.setTodoGreen",
                    "when": "(view == todos-tree && viewItem === todo) || (view == done-todos-tree && viewItem === doneTodo)",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.createFolder",
                    "when": "(view == todos-tree && viewItem === folder) || (view == done-todos-tree && viewItem === folder)",
                    "group": "1"
                },
                {
                    "command": "terrys-todos.createTodoInFolder",
                    "when": "(view == todos-tree && viewItem === folder) || (view == done-todos-tree && viewItem === folder)",
                    "group": "2"
                },
                {
                    "command": "terrys-todos.setFolderDone",
                    "when": "(view == todos-tree && viewItem === folder) || (view == done-todos-tree && viewItem === folder)",
                    "group": "inline"
                },
                {
                    "command": "terrys-todos.editFolderLabel",
                    "when": "(view == todos-tree && viewItem === folder) || (view == done-todos-tree && viewItem === folder)",
                    "group": "3"
                },
                {
                    "command": "terrys-todos.deleteFolder",
                    "when": "(view == todos-tree && viewItem === folder) || (view == done-todos-tree && viewItem === folder)",
                    "group": "3"
                }
            ]
        },
        "keybindings": [
            {
                "command": "terrys-todos.createTodo",
                "key": "ctrl+alt+t",
                "mac": "cmd+alt+t"
            }
        ],
        "configuration": {
            "title": "terrys-todos",
            "properties": {
                "terrys-todos.todos": {
                    "type": "object",
                    "default": {},
                    "description": "All todos and folders handled by Terry's Todos"
                },
                "terrys-todos.done-todos": {
                    "type": "object",
                    "default": {},
                    "description": "All done todos handled by Terry's Todos"
                },
                "terrys-todos.showDates": {
                    "type": "boolean",
                    "default": false,
                    "description": "Boolean to toggle the dates shown as descriptions"
                },
                "terrys-todos.sortingMode": {
                    "type": "string",
                    "default": "date",
                    "description": "Defines the sorting mode of the todos (either 'date' or 'color')"
                },
                "terrys-todos.includeDoneTodosOnce": {
                    "type": "boolean",
                    "default": true,
                    "description": "Once a done todo was included in the generated commit message, it will not be included again"
                },
                "terrys-todos.deleteIncludedTodos": {
                    "type": "boolean",
                    "default": false,
                    "description": "Once a done todo was included in the generated commit message, it will be permanently deleted"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.3",
        "@types/node": "18.x",
        "@types/vscode": "^1.84.0",
        "@typescript-eslint/eslint-plugin": "^6.9.0",
        "@typescript-eslint/parser": "^6.9.0",
        "@vscode/test-electron": "^2.3.6",
        "eslint": "^8.52.0",
        "glob": "^10.3.10",
        "mocha": "^10.2.0",
        "typescript": "^5.2.2"
    }
}
